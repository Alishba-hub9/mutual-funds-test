let gainers=[],losers=[],fundCardTemplate=(a,e)=>`
  <div class="funds-card" data-code="${a.code}">
    <div class="fund-mono">${a.code[0]}</div>
    <div class="fund-info">
      <div class="fund-code">${a.code}</div>
      <div class="fund-description">${a.description}</div>
    </div>
    <div class="fund-stats">
      <div class="fund-nav">NAV: ${a.nav}</div>
      <div class="fund-performance ${"gainers"===e?"positive":"negative"}">
        ${"gainers"===e?"↑":"↓"} ${a.change}
      </div>
    </div>
  </div>
`,renderFunds=(a,e)=>{$(".spinner-border").show(),$(".funds-list").html(""),$(".view-all-btn").hide();a=a.map(a=>fundCardTemplate(a,e)).join("");$(".funds-list").html(a),$(".spinner-border").hide(),$(".view-all-btn").show()},initFunds=async()=>{try{var a=await fetch("data/funds.json");if(!a.ok)throw new Error("Failed to load funds data");var e=await a.json();gainers=e.filter(a=>"gainer"===a.type),losers=e.filter(a=>"loser"===a.type),renderFunds(gainers,"gainers")}catch(a){$(".funds-list").html("<p>Failed to load funds data.</p>")}},getFundTitle=($(".fund-tab").on("click",a=>{$(".fund-tab").removeClass("active"),$(a.currentTarget).addClass("active");a=$(a.currentTarget).data("tab");$(".funds-content-wrapper").removeClass("gainers losers").addClass(a),"gainers"===a?renderFunds(gainers,"gainers"):renderFunds(losers,"losers")}),$(document).on("click",".funds-card",a=>{a=$(a.currentTarget).data("code");window.location.href="fund-details.html?id="+a}),initFunds(),a=>`
  <div class="fund-mono">${a.name[0]}</div>
  <div class="fund-info">
    <div class="fund-name">${a.name}</div>
    <span class="fund-code">${a.code}</span>
  </div>
`),getFundDetails=a=>`
  <table class="fund-details-table">
    <tbody>
      <tr>
        <td class="desc-bold">Net Asset Value:</td>
        <td class="desc-text">${a.nav}</td>
      </tr>
      <tr>
        <td class="desc-bold">Change:</td>
        <td class="desc-text ${a.change.startsWith("-")?"negative":"positive"}">
          ${a.change}
        </td>
      </tr>
      <tr>
        <td class="desc-bold">Fund Category:</td>
        <td class="desc-text">${a.category}</td>
      </tr>
      <tr>
        <td class="desc-bold">Manager:</td>
        <td class="desc-text">${a.manager}</td>
      </tr>
    </tbody>
  </table>
`,getFundSummary=a=>`
  <p>
    ${a.name}'s current Net Asset Value(NAV) is ${a.nav}. Managed by ${a.manager}, under ${a.category}. 
    Today's return: ${a.change}.
  </p>
  <span class="fund-date-time">${(new Date).toLocaleString()}</span>
`,loadFundDetails=async()=>{try{let e=new URLSearchParams(window.location.search).get("id");if(e){var a=await fetch("data/funds.json");if(!a.ok)throw new Error("Failed to load funds data");var d=(await a.json()).find(a=>a.code===e);$("#fund-details-wrapper").html(getFundTitle(d)),$(".fund-data").html(getFundDetails(d)),$(".fund-summary").html(getFundSummary(d))}}catch(a){console.error("Error loading fund details:",a);$("#fund-details-wrapper").html("<p>Failed to load fund details.</p>"),$(".fund-data, .fund-summary").empty()}},createPerformanceBadges=(loadFundDetails(),(a,e)=>`
  <div class="performance-badge ${0<=parseFloat(e)?"positive":"negative"}">
    <span class="period">${a}:</span>
    <span class="value">${e}</span>
  </div>
`),loadPerformanceBadges=async()=>{try{var a=await fetch("data/funds.json");if(!a.ok)throw new Error("Failed to load funds data");var d=await a.json();let e=new URLSearchParams(window.location.search).get("id");var t=e?d.find(a=>a.code===e):"",s=Object.entries(t.performance).map(([a,e])=>createPerformanceBadges(a,e)).join("");$("#funds-badges").html(`<div class="performance-badges">${s}</div>`)}catch(a){$("#funds-badges").html("<p>Error loading funds</p>")}},loadFundChart=(loadPerformanceBadges(),async()=>{let t=new URLSearchParams(window.location.search).get("id");if(t){$(".spinner-border").show();try{let e=(await fetch("data/funds.json").then(a=>a.json())).find(a=>a.code===t);var s=$("#navChart")[0].getContext("2d"),n=(s.clearRect(0,0,s.canvas.width,s.canvas.height),s.createLinearGradient(0,0,0,400));n.addColorStop(0,"rgba(0,123,255,0.25)"),n.addColorStop(1,"rgba(0,123,255,0)");let d=new Chart(s,{type:"line",data:{labels:[],datasets:[{label:"NAV (PKR)",data:[],borderColor:"#007bff",backgroundColor:n,fill:!0,tension:.35,pointRadius:4,pointHoverRadius:6}]},options:{responsive:!0,maintainAspectRatio:!1,plugins:{legend:{display:!1}},scales:{x:{grid:{display:!1}},y:{grid:{color:"rgba(0,0,0,0.05)"},title:{display:!0,text:"NAV Value (PKR)"}}}}}),a=a=>{a=e.navHistory[a]||[];d.data.labels=a.map(a=>a.date),d.data.datasets[0].data=a.map(a=>a.nav),d.update()};a("1D"),$(".spinner-border").hide(),$(".time-btn").off("click").on("click",function(){$(".time-btn").removeClass("active"),$(this).addClass("active"),$(".spinner-border").show(),a($(this).data("range")),$(".spinner-border").hide()})}catch(a){console.error(a),$(".spinner-border").hide()}}});loadFundChart();